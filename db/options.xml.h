//Dummy header file used for translation generation...
#define DUMMY {
printf(_("Color settings"));
printf(_("Brightness and Contrast"));
printf(_("Brightness"));
printf(_("Contrast"));
printf(_("Magic Bright Mode"));
printf(_("Text"));
printf(_("Internet"));
printf(_("Game"));
printf(_("Sport"));
printf(_("Entertain"));
printf(_("Custom"));
printf(_("Dynamic Contrast"));
printf(_("Multimedia"));
printf(_("Movie"));
printf(_("Standard"));
printf(_("Super Bright Mode"));
printf(_("One"));
printf(_("Two"));
printf(_("Three"));
printf(_("Auto Level (Needs a blank line to work)"));
printf(_("Backlight"));
printf(_("ECO Mode"));
printf(_("High"));
printf(_("Middle"));
printf(_("Low"));
printf(_("Auto"));
printf(_("f-Engine"));
printf(_("Normal"));
printf(_("User"));
printf(_("Text"));
printf(_("Movie"));
printf(_("LG F-Engine"));
printf(_("F-Engine Mode"));
printf(_("Movie"));
printf(_("Text"));
printf(_("Normal"));
printf(_("User defined"));
printf(_("F-Engine Brightness (User defined mode only)"));
printf(_("F-Engine ACE Clarity Mode (User defined mode only)"));
printf(_("Dark"));
printf(_("Normal"));
printf(_("Light"));
printf(_("F-Engine RCM Color Mode (User defined mode only)"));
printf(_("Grey"));
printf(_("Green"));
printf(_("Red"));
printf(_("Colorful"));
printf(_("BenQ Strobe"));
printf(_("Force Strobe"));
printf(_("Off"));
printf(_("On"));
printf(_("Strobe Length"));
printf(_("Strobe Phase"));
printf(_("BenQ Picture"));
printf(_("Picture Mode"));
printf(_("Standard"));
printf(_("Mode 0x01"));
printf(_("Mode 0x02"));
printf(_("Movie"));
printf(_("Mode 0x04"));
printf(_("Mode 0x05"));
printf(_("Mode 0x06"));
printf(_("Mode 0x07"));
printf(_("Mode 0x08"));
printf(_("Mode 0x09"));
printf(_("Mode 0x0A"));
printf(_("Photo"));
printf(_("sRGB"));
printf(_("Mode 0x0D"));
printf(_("Eco"));
printf(_("Mode 0x0F"));
printf(_("Mode 0x10"));
printf(_("Mode 0x11"));
printf(_("Mode 0x12"));
printf(_("Mode 0x13"));
printf(_("Mode 0x14"));
printf(_("FPS1"));
printf(_("FPS2"));
printf(_("RTS"));
printf(_("Gamer 1"));
printf(_("Gamer 2"));
printf(_("Gamer 3"));
printf(_("Gamma"));
printf(_("Gamma"));
printf(_("-0.5"));
printf(_("-0.3"));
printf(_("-0.2"));
printf(_("-0.1"));
printf(_("0"));
printf(_("+0.1"));
printf(_("+0.2"));
printf(_("+0.3"));
printf(_("+0.4"));
printf(_("+0.5"));
printf(_("+0.6"));
printf(_("+0.7"));
printf(_("+0.9"));
printf(_("1.8"));
printf(_("2.0"));
printf(_("2.2"));
printf(_("2.4"));
printf(_("2.6"));
printf(_("Color maximum level"));
printf(_("Red maximum level"));
printf(_("Green maximum level"));
printf(_("Blue maximum level"));
printf(_("Color minimum level"));
printf(_("Red minimum level"));
printf(_("Green minimum level"));
printf(_("Blue minimum level"));
printf(_("Various color settings"));
printf(_("Hue"));
printf(_("Saturation"));
printf(_("Color curve adjust"));
printf(_("Color Preset"));
printf(_("Normal"));
printf(_("Custom"));
printf(_("Warm"));
printf(_("Cool"));
printf(_("Warm1"));
printf(_("Warm2"));
printf(_("Cool1"));
printf(_("Cool2"));
printf(_("Cool3"));
printf(_("Cool4"));
printf(_("Cool5"));
printf(_("Cool6"));
printf(_("Cool7"));
printf(_("sRGB"));
printf(_("Adobe RGB"));
printf(_("4000K"));
printf(_("5000K"));
printf(_("6500K"));
printf(_("7500K"));
printf(_("8200K"));
printf(_("9300K"));
printf(_("10000K"));
printf(_("11500K"));
printf(_("Native"));
printf(_("User"));
printf(_("User 1"));
printf(_("User 2"));
printf(_("User 3"));
printf(_("User 4"));
printf(_("Easy"));
printf(_("Expert"));
printf(_("MagicColor"));
printf(_("Off"));
printf(_("Demo"));
printf(_("Full"));
printf(_("Intelligent"));
printf(_("Color temperature"));
printf(_("Color Return"));
printf(_("Position and size"));
printf(_("Position"));
printf(_("Horizontal Position"));
printf(_("Vertical Position"));
printf(_("Size"));
printf(_("Horizontal Size"));
printf(_("Vertical Size"));
printf(_("Automatic adjustments"));
printf(_("Auto Size Center"));
printf(_("Enable"));
printf(_("Disable"));
printf(_("Automatically adjust"));
printf(_("H/V Position"));
printf(_("Clock and clock phase"));
printf(_("H/V Position (fast mode)"));
printf(_("Geometry"));
printf(_("Pincushion"));
printf(_("Horizontal Pincushion"));
printf(_("Horizontal Pincushion Balance"));
printf(_("Vertical Pincushion"));
printf(_("Vertical Pincushion Balance"));
printf(_("Center Pincushion"));
printf(_("Linearity"));
printf(_("Horizontal Linearity"));
printf(_("Horizontal Linearity Balance"));
printf(_("Vertical Linearity"));
printf(_("Vertical Linearity Balance"));
printf(_("Misconvergence"));
printf(_("Horizontal Misconvergence"));
printf(_("Vertical Misconvergence"));
printf(_("Vertical Top Misconvergence"));
printf(_("Vertical Bottom Misconvergence"));
printf(_("General distortion"));
printf(_("Parallelogram Distortion (Key Balance)"));
printf(_("Trapezoidal Distortion (Key)"));
printf(_("Corners distortion"));
printf(_("Top Corner Distortion Control"));
printf(_("Top Corner Distortion Balance"));
printf(_("Bottom Corner Distortion Control"));
printf(_("Bottom Corner Distortion Balance"));
printf(_("Rotation"));
printf(_("Rotation (Tilt)"));
printf(_("Screen purity"));
printf(_("Moire"));
printf(_("Horizontal Moire"));
printf(_("Vertical Moire"));
printf(_("Image setup"));
printf(_("Focus"));
printf(_("Image Lock Coarse (Clock)"));
printf(_("Image Lock Fine (Clock Phase)"));
printf(_("Corners purity"));
printf(_("Top left screen purity"));
printf(_("Top right screen purity"));
printf(_("Bottom left screen purity"));
printf(_("Bottom right screen purity"));
printf(_("Various"));
printf(_("Landing Adjust (RGB alignment)"));
printf(_("Sharpness"));
printf(_("Others"));
printf(_("Restore defaults"));
printf(_("Restore Factory Defaults"));
printf(_("Restore Brightness and Contrast"));
printf(_("Restore Factory Default Geometry"));
printf(_("Restore Factory Default Color"));
printf(_("Restore Factory Default Position"));
printf(_("Restore Factory Default Size"));
printf(_("Restore Factory Default Size and Position"));
printf(_("Settings"));
printf(_("Save Current Settings"));
printf(_("Restore Factory Settings"));
printf(_("Audio"));
printf(_("Audio Speaker Volume Adjust"));
printf(_("Audio Microphone Volume Adjust"));
printf(_("Mute"));
printf(_("Mute"));
printf(_("Normal"));
printf(_("Degauss"));
printf(_("Degauss"));
printf(_("Secondary Degauss"));
printf(_("OSD"));
printf(_("On Screen Display"));
printf(_("Disable"));
printf(_("Enable"));
printf(_("Enable only brightness/contrast settings"));
printf(_("On Screen Display (Samsung)"));
printf(_("Disable"));
printf(_("Enable"));
printf(_("OSD Orientation"));
printf(_("Landscape"));
printf(_("Portrait"));
printf(_("Language select"));
printf(_("English"));
printf(_("French"));
printf(_("German"));
printf(_("Italian"));
printf(_("Russian"));
printf(_("Spanish"));
printf(_("Swedish"));
printf(_("Chinese"));
printf(_("Dutch"));
printf(_("Japanese"));
printf(_("Input settings"));
printf(_("Input level Select"));
printf(_("Display Resolution Notifier"));
printf(_("On"));
printf(_("Off"));
printf(_("Input Source Select"));
printf(_("Analog"));
printf(_("Digital"));
printf(_("DisplayPort"));
printf(_("DVI"));
printf(_("DVI-1"));
printf(_("DVI-2"));
printf(_("HDMI"));
printf(_("HDMI-1"));
printf(_("HDMI-2"));
printf(_("VGA"));
printf(_("Component"));
printf(_("Autoselect Input Source"));
printf(_("Automatic"));
printf(_("Manual"));
printf(_("Power control"));
printf(_("DPMS Control"));
printf(_("On"));
printf(_("Standby"));
printf(_("Off"));
printf(_("Power control"));
printf(_("Off"));
printf(_("On"));
printf(_("Buttons and leds"));
printf(_("Custom key"));
printf(_("MagicBright"));
printf(_("MagicColor"));
printf(_("Automatic setup"));
printf(_("Input Source Select"));
printf(_("Color Tone"));
printf(_("Power LED"));
printf(_("Off"));
printf(_("On"));
}
